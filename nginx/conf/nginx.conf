events {}

http {
    upstream upstream-server {
        server server1:3000 weight=5;  # 
        server server2:3001 weight=4;  # Ketika di tambahkan backup seperti contoh "server server2:3001 backup;", maka server tersebut tidak mendapat request kecuali kedua server down. 
        server server3:3002 weight=3;  # Jika salah satu server perlu dihapus sementara dari load balancing bisa ditandai dengan down , contoh : "server server3:3002 down;" 
    }
    # - didistribusikan secara merata di seluruh server, dengan mempertimbangkan
    #   bobot server. Metode ini digunakan secara default (tidak ada arahan untuk mengaktifkannya)

    #######-----Least Connections-----######
    # upstream upstream-server {
    #    least_conn;
    #    server server1:3000 weight=5;
    #    server server2:3001 ;
    #    server server3:3002 backup;
    #}

    # - Permintaan dikirim ke server dengan jumlah koneksi aktif paling
    #   sedikit, sekali lagi dengan mempertimbangkan bobot server

    ######------IP HASH ---------#####
     # upstream upstream-server {
    #    ip-hash;
    #    server server1.example.com weight=5;
    #    server server2.example.com weight=4;
    #    server server3.example.com weight=3;
    #}

    # - Metode ini menjamin bahwa permintaan dari alamat yang sama sampai
    #   ke server yang sama kecuali jika tidak tersedia.

    
    server {
        listen 8080;

        location / {
            proxy_pass http://upstream-server;
        }
    }
}